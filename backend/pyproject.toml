[tool.black]
line-length = 120

[tool.ruff]
target-version = "py312"
line-length = 120
ignore-init-module-imports = true
extend-select = [
    "B",
    "C",
    "I", # import sorting
    "PERF",
    "PGH002",  # .warn is deprecated
    "PGH004",  # specific noqa
    "PL",  # pylint
    "RET",
    "RUF005",  # avoid iterable concatenation
    "RUF013",  # implicit `optional` (contra type annotations)
    "RUF100",  # unused noqa
    "SIM",
    "UP",
    "S101",  # asserts
]
extend-ignore = [
    "C408",  # unnecessary dict call (these are likely stylistic)
    "C901",  # function is too complex
    "E401",  # multiple imports on one line (handled by I)
    "E731",  # do not assign a lambda expression, use a def
    "PLR0911",  # too many returns
    "PLR0912",  # too many branches
    "PLR0913",  # too many args
    "PLR0915",  # too many statements
    "PLW2901",  # for loop variable overwritten (too many false positives)
    "RET505",  # Unnecessary `else` after `return` statement
    "SIM105",  # contextlib.suppress has a performance cost
    "SIM108",  # ternary operators can be less readable
    "PERF401", # manual-list-comprehension
]

[tool.ruff.extend-per-file-ignores]
"**/__init__.py" = [
    "F401",  # imported but unused
]
"events/**/setup_*.py" = [
    "B007",  # loop control variable not used
    "F841",  # local variable is assigned to but never used
    "PERF",  # setups are one-off, PERF is not relevant
    "PLR2004",  # magic values are ok in setup
]
"**/test*.py" = [
    "PLR2004",  # magic values are ok in tests
    "S101",  # asserts are ok in tests
]
"events/*201*/*.py" = [
    "S101",  # asserts are ok in legacy events
]
"events/*202[0123]/*.py" = [
    "S101",  # asserts are ok in legacy events
]
"**/management/**.py" = [
    "S101",  # asserts are ok in one-off management commands
]
