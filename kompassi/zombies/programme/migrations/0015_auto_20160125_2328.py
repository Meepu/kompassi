# Generated by Django 1.9.1 on 2016-01-25 21:28


import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("programme", "0014_invitationadminproxy_programmemanagementproxy"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProgrammeProfileProxy",
            fields=[],
            options={
                "proxy": True,
            },
            bases=("programme.programme",),
        ),
        migrations.AlterModelOptions(
            name="programme",
            options={
                "ordering": ["start_time", "room"],
                "verbose_name": "programme",
                "verbose_name_plural": "programmes",
            },
        ),
        migrations.AddField(
            model_name="role",
            name="is_public",
            field=models.BooleanField(
                default=True,
                help_text="Only hosts who are assigned public roles will be shown publicly in the programme schedule.",
                verbose_name="Public",
            ),
        ),
        migrations.AlterField(
            model_name="programme",
            name="end_time",
            field=models.DateTimeField(blank=True, null=True, verbose_name="Ending time"),
        ),
        migrations.AlterField(
            model_name="programme",
            name="length",
            field=models.IntegerField(
                blank=True,
                help_text="In order to be displayed in the schedule, the programme must have a start time and a length and must be assigned into a room.",
                null=True,
                verbose_name="Length (minutes)",
            ),
        ),
        migrations.AlterField(
            model_name="programme",
            name="notes",
            field=models.TextField(
                blank=True,
                help_text="This field is normally only visible to the programme managers. However, should the programme host request a record of their own personal details, this field will be included in that record.",
                verbose_name="Internal notes",
            ),
        ),
        migrations.AlterField(
            model_name="programme",
            name="notes_from_host",
            field=models.TextField(
                blank=True,
                help_text="If there is anything else you wish to say to the programme manager that is not covered by the above questions, please enter it here.",
                verbose_name="Anything else?",
            ),
        ),
        migrations.AlterField(
            model_name="programme",
            name="requested_time_slot",
            field=models.TextField(
                blank=True,
                help_text="At what time would you like to hold your programme? Are there other programme that you do not wish to co-incide with?",
                verbose_name="Requested time slot",
            ),
        ),
        migrations.AlterField(
            model_name="programme",
            name="room",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="programme.Room",
                verbose_name="Room",
            ),
        ),
        migrations.AlterField(
            model_name="programme",
            name="room_requirements",
            field=models.TextField(
                blank=True,
                help_text="How large an audience do you expect for your programme? What kind of a room do you wish for your programme?",
                verbose_name="Requirements for the room",
            ),
        ),
        migrations.AlterField(
            model_name="programme",
            name="start_time",
            field=models.DateTimeField(blank=True, null=True, verbose_name="Starting time"),
        ),
        migrations.AlterField(
            model_name="programme",
            name="state",
            field=models.CharField(
                choices=[
                    ("idea", "Internal programme idea"),
                    ("asked", "Asked from the host"),
                    ("offered", "Offer received"),
                    ("accepted", "Accepted"),
                    ("published", "Published"),
                    ("cancelled", "Cancelled"),
                    ("rejected", "Rejected"),
                ],
                default="accepted",
                help_text='The programmes in the state "Published" will be visible to the general public, if the schedule has already been published.',
                max_length=15,
                verbose_name="State",
            ),
        ),
        migrations.AlterField(
            model_name="programme",
            name="tags",
            field=models.ManyToManyField(blank=True, to="programme.Tag", verbose_name="Tags"),
        ),
        migrations.AlterField(
            model_name="programme",
            name="tech_requirements",
            field=models.TextField(
                blank=True,
                help_text="Do you need, for example, any of the following: computer, data projector, voice amplification, music playback capabilities, whiteboard, flipboard, chalkboard? The use of your own computer is only possible if agreed in advance.",
                verbose_name="Tech requirements",
            ),
        ),
        migrations.AlterField(
            model_name="programme",
            name="video_permission",
            field=models.CharField(
                choices=[
                    ("public", "My programme may be recorded and published"),
                    ("private", "I forbid publishing my programme, but it may be recorded for archiving purposes"),
                    ("forbidden", "I forbid recording my programme altogether"),
                ],
                default="public",
                help_text="May your programme be recorded and published in the Internet?",
                max_length=15,
                verbose_name="Recording permission",
            ),
        ),
    ]
